# Docker-specific configuration for Transfer Service
spring.application.name=fintech-payments-transfer-service
server.port=8080

# Ledger Service URL for Docker
ledger.service.url=http://ledger-service:8081

# Actuator configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus,circuitbreakers,circuitbreakerevents
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true
management.metrics.export.prometheus.enabled=true

# Circuit Breaker Configuration for Docker
resilience4j.circuitbreaker.instances.ledgerService.failure-rate-threshold=60
resilience4j.circuitbreaker.instances.ledgerService.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.ledgerService.wait-duration-in-open-state=30s
resilience4j.circuitbreaker.instances.ledgerService.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.ledgerService.sliding-window-size=10
resilience4j.circuitbreaker.instances.ledgerService.sliding-window-type=count_based
resilience4j.circuitbreaker.instances.ledgerService.slow-call-rate-threshold=50
resilience4j.circuitbreaker.instances.ledgerService.slow-call-duration-threshold=5s

# Timeout Configuration
resilience4j.timelimiter.instances.ledgerService.timeout-duration=10s

# Retry Configuration
resilience4j.retry.instances.ledgerService.max-attempts=3
resilience4j.retry.instances.ledgerService.wait-duration=1s
resilience4j.retry.instances.ledgerService.exponential-backoff-multiplier=2

# Logging configuration for Docker
logging.level.org.springframework.web=INFO
logging.level.za.co.titandynamix.client=INFO
logging.level.za.co.titandynamix=INFO
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Docker-specific settings
spring.docker.compose.enabled=false

# OpenAPI/Swagger Configuration (Enabled in Docker for testing)
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true