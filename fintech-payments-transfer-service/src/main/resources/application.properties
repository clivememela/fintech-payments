spring.application.name=fintech-payments-transfer-service

# OpenAPI/Swagger Configuration (Development Only)
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true
springdoc.swagger-ui.filter=true
server.port=8080

# Actuator health check and circuit breaker metrics
management.endpoints.web.exposure.include=health,circuitbreakers,circuitbreakerevents,metrics
management.endpoint.health.show-details=always
management.health.redis.enabled=false
management.health.circuitbreakers.enabled=true

# Swagger configuration
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/api-docs

# Logging configuration
logging.level.org.springframework.web=DEBUG
logging.level.za.co.titandynamix.client=DEBUG

# Circuit Breaker Configuration
resilience4j.circuitbreaker.instances.ledgerService.failure-rate-threshold=60
resilience4j.circuitbreaker.instances.ledgerService.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.ledgerService.wait-duration-in-open-state=30s
resilience4j.circuitbreaker.instances.ledgerService.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.ledgerService.sliding-window-size=10
resilience4j.circuitbreaker.instances.ledgerService.sliding-window-type=count_based
resilience4j.circuitbreaker.instances.ledgerService.slow-call-rate-threshold=50
resilience4j.circuitbreaker.instances.ledgerService.slow-call-duration-threshold=5s

# Timeout Configuration
resilience4j.timelimiter.instances.ledgerService.timeout-duration=10s

# Retry Configuration (optional - for additional resilience)
resilience4j.retry.instances.ledgerService.max-attempts=3
resilience4j.retry.instances.ledgerService.wait-duration=1s
resilience4j.retry.instances.ledgerService.exponential-backoff-multiplier=2

# Docker configuration
docker.image.name=fintech-payments-transfer-service
docker.image.tag=latest
spring.docker.compose.enabled=true