services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: fintech-postgres
    environment:
      POSTGRES_DB: fintechpayments
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5436:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - fintech-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (for session management and caching)
  redis:
    image: redis:7-alpine
    container_name: fintech-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - fintech-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Ledger Service
  ledger-service:
    build:
      context: .
      dockerfile: fintech-payments-ledger-service/Dockerfile
    container_name: fintech-ledger-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/fintechpayments
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
      - SERVER_PORT=8080
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - fintech-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    volumes:
      - ledger_logs:/app/logs

  # Transfer Service
  transfer-service:
    build:
      context: .
      dockerfile: fintech-payments-transfer-service/Dockerfile
    container_name: fintech-transfer-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LEDGER_SERVICE_URL=http://ledger-service:8080
      - SERVER_PORT=8081
    ports:
      - "8081:8081"
    depends_on:
      ledger-service:
        condition: service_healthy
    networks:
      - fintech-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    volumes:
      - transfer_logs:/app/logs

  # Nginx Load Balancer (optional)
  nginx:
    image: nginx:alpine
    container_name: fintech-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - transfer-service
      - ledger-service
    networks:
      - fintech-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  ledger_logs:
    driver: local
  transfer_logs:
    driver: local

networks:
  fintech-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16